
<script src="https://www.gstatic.com/firebasejs/8.5.0/firebase-app.js"></script>

<script src="https://www.gstatic.com/firebasejs/8.5.0/firebase-analytics.js"></script>

<script src="https://www.gstatic.com/firebasejs/8.5.0/firebase-database.js"></script>

<script>

    var firebaseConfig = {
        apiKey: "AIzaSyAId5U8P5nDEhytscOGupt7yymM9R0Gdsc",
        authDomain: "wildlife-monitoring-system.firebaseapp.com",
        databaseURL: "https://wildlife-monitoring-system-default-rtdb.asia-southeast1.firebasedatabase.app",
        projectId: "wildlife-monitoring-system",
        storageBucket: "wildlife-monitoring-system.appspot.com",
        messagingSenderId: "345584392239",
        appId: "1:345584392239:web:1588fc68d350da6ecc4eda",
        measurementId: "G-1MER911JKD"
    };
    // Initialize Firebase
    firebase.initializeApp(firebaseConfig);
    firebase.analytics();
</script>

<div class="layout-px-spacing">

    <div class="row layout-top-spacing">
        <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 layout-spacing">
            <div class="row">
                <div class="col-lg-12 col-12 layout-spacing">
                    <div class="statbox widget box box-shadow">
                        <div class="widget-header">
                            <div class="row">
                                <div class="col-xl-12 col-md-12 col-sm-12 col-12">
                                    <h4></h4>
                                </div>
                            </div>
                        </div>
                        <div class="widget-content widget-content-area justify-pill">

                            <ul class="nav nav-pills mb-3 mt-3 justify-content-center" id="justify-center-pills-tab" role="tablist">
                                <li class="nav-item">
                                    <a class="nav-link active" id="justify-center-pills-home-tab" data-toggle="pill" href="#compare_behavior" role="tab" aria-controls="justify-center-pills-home" aria-selected="true">Compare Behavior</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" id="justify-center-pills-profile-tab" data-toggle="pill" href="#consumption_patterns" role="tab" aria-controls="justify-center-pills-profile" aria-selected="false">Consumption Patterns</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" id="justify-center-pills-contact-tab" data-toggle="pill" href="#rainfall_and_soil" role="tab" aria-controls="justify-center-pills-contact" aria-selected="false">Rainfall and Soil</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" id="justify-center-pills-contact-tab" data-toggle="pill" href="#waterbody_status" role="tab" aria-controls="justify-center-pills-contact" aria-selected="false">Waterbody Status</a>
                                </li>
                            </ul>

                            <div class="tab-content" id="justify-center-pills-tabContent">
                                <div class="tab-pane fade show active" id="compare_behavior" role="tabpanel" aria-labelledby="justify-center-pills-home-tab">
                                    <div class="row">
                                        <div class="col-lg-9">
                                            <div id="cbMap" style="height: 700px"></div>
                                            <br/>
                                        </div>
                                        <div class="col-lg-3">
                                            <div class="form-group mb-0">
                                                <input id="selectdate1" name="selectdate1" class="form-control flatpickr flatpickr-input active" type="text" placeholder="Select Date..">
                                            </div>
                                            <br/>
                                            <div class="form-group mb-0">
                                                <select id="select1" class="form-control basic">
                                                    <option selected="selected">Terrestial Tracker 1</option>
                                                    <option>Terrestial Tracker 2</option>
                                                    <option>Marine Tracker</option>
                                                    <option>Aerial Tracker</option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="tab-pane fade" id="consumption_patterns" role="tabpanel" aria-labelledby="justify-center-pills-profile-tab">
                                    <div class="row">
                                        <div class="col-lg-9">
                                            <div id="cpMap" style="height: 700px"></div>
                                            <br/>
                                        </div>
                                        <div class="col-lg-3">
                                            <div class="form-group mb-0">
                                                <input id="selectdate2" name="selectdate2" class="form-control flatpickr flatpickr-input active" type="text" placeholder="Select Date..">
                                            </div>
                                            <br/>
                                            <div class="form-group mb-0">
                                                <select class="form-control basic">
                                                    <option selected="selected">Select Tracker</option>
                                                    <option>Terrestrial Tracker</option>
                                                    <option>Marine Tracker</option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="tab-pane fade" id="rainfall_and_soil" role="tabpanel" aria-labelledby="justify-center-pills-contact-tab">
                                    <div class="row">
                                        <div class="col-lg-9">
                                            <div id="rsMap" style="height: 700px"></div>
                                            <br/>
                                        </div>
                                        <div class="col-lg-3">
                                            <div class="form-group mb-0">
                                                <input id="selectdate3" name="selectdate3" class="form-control flatpickr flatpickr-input active" type="text" placeholder="Select Date..">
                                            </div>
                                            <br/>
                                            <div class="form-group mb-0">
                                                <select class="form-control basic">
                                                    <option selected="selected">Select Parameter</option>
                                                    <option>Rainfall Frequency</option>
                                                    <option>Soil Health</option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="tab-pane fade" id="waterbody_status" role="tabpanel" aria-labelledby="justify-center-pills-contact-tab">
                                    <div class="row">
                                        <div class="col-lg-9">
                                            <div id="wsMap" style="height: 700px"></div>
                                            <br/>
                                        </div>
                                        <div class="col-lg-3">
                                            <div class="form-group mb-0">
                                                <input id="selectdate4" name="selectdate4" class="form-control flatpickr flatpickr-input active" type="text" placeholder="Select Date..">
                                            </div>
                                            <br/>
                                            <div class="form-group mb-0">
                                                <select class="form-control basic">
                                                    <option selected="selected">Select Parameter</option>
                                                    <option>Water PH Quality</option>
                                                    <option>Water Temperature</option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
            </div>
        </div>
    </div>
</div>


<!--<script type="text/javascript" src="/javascripts/map-picker.js"></script>-->
<!--<script type="text/javascript" src="https://maps.google.com/maps/api/js?key=AIzaSyB8BbO_t_LXJLuBuHLnRMvXBJH8_S7q2IM&callback=initMap" async></script>-->
<script>
    function initMap()
    {
        //Start Div Compare Behavior Map//

        // let heatMapDataForCB = [
        //     {location: new google.maps.LatLng(37.782, -122.447), weight: 0.5},
        //     {location: new google.maps.LatLng(37.782, -122.445), weight: 2},
        //     {location: new google.maps.LatLng(37.782, -122.443), weight: 2},
        //     {location: new google.maps.LatLng(37.782, -122.443), weight: 2},
        //     {location: new google.maps.LatLng(37.782, -122.441), weight: 3},
        //     {location: new google.maps.LatLng(37.782, -122.439), weight: 2},
        //     {location: new google.maps.LatLng(37.782, -122.437), weight: 0.5},
        //     {location: new google.maps.LatLng(37.782, -122.435), weight: 0.5},
        //     {location: new google.maps.LatLng(37.785, -122.447), weight: 3},
        //     {location: new google.maps.LatLng(37.785, -122.445), weight: 2},
        //     {location: new google.maps.LatLng(37.785, -122.443), weight: 2},
        //     {location: new google.maps.LatLng(37.785, -122.441), weight: 0.5},
        //     {location: new google.maps.LatLng(37.785, -122.439), weight: 5},
        //     {location: new google.maps.LatLng(37.785, -122.437), weight: 5},
        //     {location: new google.maps.LatLng(37.785, -122.435), weight: 5}
        // ];
        //
        // let mapCenterLocationForCB = new google.maps.LatLng(37.774546, -122.433523);
        //
        //
        // let mapCB = new google.maps.Map(document.getElementById('cbMap'), {
        //     center: mapCenterLocationForCB,
        //     zoom: 15,
        //     mapTypeId: 'satellite'
        // });
        //
        // let heatmapCB = new google.maps.visualization.HeatmapLayer({
        //     data: heatMapDataForCB
        // });
        // heatmapCB.setMap(mapCB);

        //End Div Compare Behavior Map//

        //Start Div Consumption Patterns Map//
        let heatMapDataForCP = [
            {location: new google.maps.LatLng(37.782, -122.447), weight: 0.5},
            new google.maps.LatLng(37.782, -122.445),
            {location: new google.maps.LatLng(37.782, -122.443), weight: 2},
            {location: new google.maps.LatLng(37.782, -122.441), weight: 3},
            {location: new google.maps.LatLng(37.782, -122.439), weight: 2},
            new google.maps.LatLng(37.782, -122.437),
            {location: new google.maps.LatLng(37.782, -122.435), weight: 0.5},

            {location: new google.maps.LatLng(37.785, -122.447), weight: 3},
            {location: new google.maps.LatLng(37.785, -122.445), weight: 2},
            new google.maps.LatLng(37.785, -122.443),
            {location: new google.maps.LatLng(37.785, -122.441), weight: 0.5},
            new google.maps.LatLng(37.785, -122.439),
            {location: new google.maps.LatLng(37.785, -122.437), weight: 2},
            {location: new google.maps.LatLng(37.785, -122.435), weight: 3}
        ];


        let mapCenterLocationForCP = new google.maps.LatLng(37.774546, -122.433523);


        let mapCP = new google.maps.Map(document.getElementById('cpMap'), {
            center: mapCenterLocationForCP,
            zoom: 12,
            mapTypeId: 'satellite'
        });

        let heatmapCP = new google.maps.visualization.HeatmapLayer({
            data: heatMapDataForCP
        });
        heatmapCP.setMap(mapCP);

        //End Div Consumption Patterns Map//

        //Start Div Rainfall and Soil Map//
        let heatMapDataForRS = [
            {location: new google.maps.LatLng(37.782, -122.447), weight: 0.5},
            new google.maps.LatLng(37.782, -122.445),
            {location: new google.maps.LatLng(37.782, -122.443), weight: 2},
            {location: new google.maps.LatLng(37.782, -122.441), weight: 3},
            {location: new google.maps.LatLng(37.782, -122.439), weight: 2},
            new google.maps.LatLng(37.782, -122.437),
            {location: new google.maps.LatLng(37.782, -122.435), weight: 0.5},

            {location: new google.maps.LatLng(37.785, -122.447), weight: 3},
            {location: new google.maps.LatLng(37.785, -122.445), weight: 2},
            new google.maps.LatLng(37.785, -122.443),
            {location: new google.maps.LatLng(37.785, -122.441), weight: 0.5},
            new google.maps.LatLng(37.785, -122.439),
            {location: new google.maps.LatLng(37.785, -122.437), weight: 2},
            {location: new google.maps.LatLng(37.785, -122.435), weight: 3}
        ];


        let mapCenterLocationForRS = new google.maps.LatLng(37.774546, -122.433523);


        let mapRS = new google.maps.Map(document.getElementById('rsMap'), {
            center: mapCenterLocationForRS,
            zoom: 12,
            mapTypeId: 'satellite'
        });

        let heatmapRS = new google.maps.visualization.HeatmapLayer({
            data: heatMapDataForRS
        });
        heatmapRS.setMap(mapRS);

        //End Div Rainfall and Soil Map//

        //Start Div Waterbody Status Map//
        let heatMapDataForWS = [
            {location: new google.maps.LatLng(37.782, -122.447), weight: 0.5},
            new google.maps.LatLng(37.782, -122.445),

            {location: new google.maps.LatLng(37.782, -122.443), weight: 2},
            {location: new google.maps.LatLng(37.782, -122.441), weight: 3},
            {location: new google.maps.LatLng(37.782, -122.439), weight: 2},
            new google.maps.LatLng(37.782, -122.437),

            {location: new google.maps.LatLng(37.782, -122.435), weight: 0.5},
            {location: new google.maps.LatLng(37.785, -122.447), weight: 3},
            {location: new google.maps.LatLng(37.785, -122.445), weight: 2},
            new google.maps.LatLng(37.785, -122.443),

            {location: new google.maps.LatLng(37.785, -122.441), weight: 0.5},
            new google.maps.LatLng(37.785, -122.439),
            {location: new google.maps.LatLng(37.785, -122.437), weight: 2},
            {location: new google.maps.LatLng(37.785, -122.435), weight: 3}
        ];


        let mapCenterLocationForWS = new google.maps.LatLng(37.774546, -122.433523);


        let mapWS = new google.maps.Map(document.getElementById('wsMap'), {
            center: mapCenterLocationForWS,
            zoom: 12,
            mapTypeId: 'satellite'
        });

        let heatmapWS = new google.maps.visualization.HeatmapLayer({
            data: heatMapDataForWS
        });
        heatmapWS.setMap(mapWS);

        //End Div Waterbody Status Map//
    }

    window.getData=function(){

        var dateSelected = document.getElementById('selectdate1').value;
        console.log(String(dateSelected));
        var animal = document.getElementById('select1').value;
        console.log(String(animal));
        var trackerId;
        if(animal=="Terrestial Tracker 1")
            trackerId="TKT1";
        else if(animal=="Terrestial Tracker 2")
            trackerId="TKT2";
        else if(animal=="Marine Tracker")
            trackerId="TKM1";
        else if(animal=="Aerial Tracker")
            trackerId="TKA1";

        console.log(trackerId);
        var splt= dateSelected.split(":");
        var year=splt[0];
        var month= splt[1];
        var day=splt[2];

        var historyLongArrayForCB=[];
        var historyLatArrayForCB=[];
        var longArrayForCB=[];
        var latArrayForCB=[];
        var locFrequency=[];
        var heatMapArrayForCB=[];

        if(month<10){
            month=month.split("0");
            month=month[1];
        }

        if(day<10){
            day=day.split("0");
            day=day[1];
        }
        dateSelected=year+":"+month+":"+day;
        console.log(dateSelected);

        firebase.database().ref().child('TK').child(trackerId).orderByChild("date").equalTo(String(dateSelected)).on("value", function(snapshot) {
            if (snapshot.exists()) {
                console.log(snapshot.val());
                var data= snapshot.val();
                snapshot.forEach((child) => {
                    if(child.val().lat!=0){

                        let latVal=child.val().lat;
                        let longVal=child.val().long;
                        latVal=String(latVal);
                        latVal=latVal.split(".");
                        let latInt= latVal[0];
                        let latFloat= latVal[1];
                        latFloat=latFloat.substr(0,4);
                        latVal=latInt+"."+latFloat;
                        latVal=parseFloat(latVal);

                        //reduce long value to four decimal points
                        longVal=String(longVal);
                        longVal=longVal.split(".");
                        let longInt= longVal[0];
                        let longFloat= longVal[1];
                        longFloat=longFloat.substr(0,4);
                        longVal=longInt+"."+longFloat;
                        longVal=parseFloat(longVal);

                        console.log("Lat:"+latVal+" Long:"+longVal);
                        console.log("---------------------------------------------------------------");
                        historyLatArrayForCB.push(latVal);
                        historyLongArrayForCB.push(longVal);

                    }

                });

                console.log("***************************************************");
                for (let j = 0; j < historyLatArrayForCB.length; j++)
                {
                    console.log("Long:"+historyLongArrayForCB[j]+" Lat:"+historyLatArrayForCB[j]);
                    // console.log("Lat:"+longArrayForCB[j]+" Long:"+latArrayForCB[j]+" Frequency:"+locFrequency[j]);
                }
                console.log("***************************************************");
                console.log(historyLatArrayForCB.length+" is history array length");


                for (let i = 0; i < historyLatArrayForCB.length; i++)
                {
                    if(i==0)
                    {
                        locFrequency.push(1);
                        longArrayForCB.push(historyLongArrayForCB[i]);
                        latArrayForCB.push(historyLatArrayForCB[i]);
                    }
                    else
                    {
                        let found=0;
                        for(let j=0;j<locFrequency.length;j++)
                        {
                            if(historyLongArrayForCB[i]===longArrayForCB[j] && historyLatArrayForCB[i]===latArrayForCB[j])
                            {
                                locFrequency[j]++;
                                found=1;
                            }
                            if(j==(locFrequency.length-1) && found==0){
                                locFrequency.push(0);
                                longArrayForCB.push(historyLongArrayForCB[i]);
                                latArrayForCB.push(historyLatArrayForCB[i]);
                            }
                        }
                    }
                }


                let max_of_freq = Math.max.apply(Math, locFrequency);
                let min_of_freq = Math.min.apply(Math, locFrequency);
                console.log("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
                for (let j = 0; j < longArrayForCB.length; j++)
                {
                    console.log("Long:"+longArrayForCB[j]+" Lat:"+latArrayForCB[j]+" Frequency:"+locFrequency[j]);
                    let value = locFrequency[j];
                    let mappedValue = map(value, min_of_freq, max_of_freq, 0.5, 5);
                    console.log("mapped value:"+mappedValue);
                    heatMapArrayForCB[j]="location: new google.maps.LatLng("+latArrayForCB[j]+", "+longArrayForCB[j]+"), weight: "+mappedValue;
                    console.log(heatMapArrayForCB[j]);
                }
                console.log("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");

                let mapCenterLocationForCB = "new google.maps.LatLng("+latArrayForCB[0]+", "+longArrayForCB[0]+")";


                let mapCB = new google.maps.Map(document.getElementById('cbMap'), {
                    center: mapCenterLocationForCB,
                    zoom: 15,
                    mapTypeId: 'satellite'
                });

                let heatmapCB = new google.maps.visualization.HeatmapLayer({
                    data: heatMapDataForCB
                });
                heatmapCB.setMap(mapCB);
            }
            else
                console.log("data not retrieved or no data");
        });

    }

    function map( x,  in_min,  in_max,  out_min,  out_max){
        return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
    }


</script>

<script async
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB8BbO_t_LXJLuBuHLnRMvXBJH8_S7q2IM&libraries=visualization&callback=initMap">
</script>

<script>
    $( document ).ready(function() {
        let dateCB = flatpickr(document.getElementById('selectdate1'), {
            dateFormat: "Y:m:d"
        });
        let dateCP = flatpickr(document.getElementById('selectdate2'), {
            dateFormat: "Y:m:d"
        });

        let dateRS = flatpickr(document.getElementById('selectdate3'), {
            dateFormat: "Y:m:d"
        });

        let dateWS = flatpickr(document.getElementById('selectdate4'), {
            dateFormat: "Y:m:d"
        });

        // firebase.database().ref().child('TK').child('TKA1').get().then((snapshot) => {
        //     if (snapshot.exists()) {
        //         console.log(snapshot.val());
        //     }else{
        //
        //     }
        // });

        $("#selectdate1").change(function changeSession() {
            getData();
        });

        $("#select1").change(function changeSession() {
            getData();
        });
    });
</script>